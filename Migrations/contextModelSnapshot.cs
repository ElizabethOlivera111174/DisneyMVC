// <auto-generated />
using System;
using Disney.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Disney.Migrations
{
    [DbContext(typeof(context))]
    partial class contextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApiDisney.Models.Genero", b =>
                {
                    b.Property<int>("idGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idGenero");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("ApiDisney.Models.PeliculaPersonaje", b =>
                {
                    b.Property<int>("idPeliculaPersonaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idPeliculaSerie")
                        .HasColumnType("int");

                    b.Property<int>("idPersonaje")
                        .HasColumnType("int");

                    b.HasKey("idPeliculaPersonaje");

                    b.HasIndex("idPeliculaSerie");

                    b.HasIndex("idPersonaje");

                    b.ToTable("PeliculasPerosnajes");
                });

            modelBuilder.Entity("ApiDisney.Models.PeliculaSerie", b =>
                {
                    b.Property<int>("idPeliculaSerie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("calificacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idGenero")
                        .HasColumnType("int");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idPeliculaSerie");

                    b.HasIndex("idGenero");

                    b.ToTable("PeliculasSeries");
                });

            modelBuilder.Entity("ApiDisney.Models.Personaje", b =>
                {
                    b.Property<int>("idPersonaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("edad")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("historia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("peso")
                        .HasColumnType("int");

                    b.HasKey("idPersonaje");

                    b.ToTable("Personajes");
                });

            modelBuilder.Entity("ApiDisney.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nobreUsu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("ApiDisney.Models.PeliculaPersonaje", b =>
                {
                    b.HasOne("ApiDisney.Models.PeliculaSerie", "peliculasSeries")
                        .WithMany()
                        .HasForeignKey("idPeliculaSerie")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiDisney.Models.Personaje", "personajes")
                        .WithMany()
                        .HasForeignKey("idPersonaje")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("peliculasSeries");

                    b.Navigation("personajes");
                });

            modelBuilder.Entity("ApiDisney.Models.PeliculaSerie", b =>
                {
                    b.HasOne("ApiDisney.Models.Genero", "generos")
                        .WithMany()
                        .HasForeignKey("idGenero")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("generos");
                });
#pragma warning restore 612, 618
        }
    }
}
